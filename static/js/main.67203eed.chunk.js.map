{"version":3,"sources":["Components/ArtGetter.js","artwork/dr.pozzi_sargent.jpg","artwork/clickAgain.JPG","Components/Painting.js","artwork/loading.gif","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["ArtGetter","url","useState","data","setData","useEffect","fetch","then","res","json","console","log","Painting","props","pozzi","painting","setPainting","num","axios","get","response","className","src","primaryImage","clickAgain","onClick","class","alt","title","Home","setNum","currWork","setCurrWork","yourQuery","setYourQuery","isLoading","setLoading","artChecker","setArtChecker","emergArt","setEmergArt","searching","setSearching","setLoadingSymbol","makeGetRequest","path","Promise","resolve","reject","result","error","a","fetchEmerg","total","gettingData","type","value","onChange","event","target","max","numArr","i","Math","floor","random","push","randomizer","objectIDs","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67203eed.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n\r\nconst ArtGetter = (url) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => setData(data));\r\n    }, [url]);\r\n    if (data === null){\r\n        console.log(\"data was null for ArtGetter\");\r\n    }\r\n    return [data];\r\n};\r\n\r\nexport default ArtGetter;","export default __webpack_public_path__ + \"static/media/dr.pozzi_sargent.e9146436.jpg\";","export default __webpack_public_path__ + \"static/media/clickAgain.4e59b3e2.JPG\";","import React, {useState, useEffect, useRef} from 'react';\r\nimport './Painting.css'\r\nimport ArtGetter from \"./ArtGetter.js\"\r\nimport pozzi from \"../artwork/dr.pozzi_sargent.jpg\"\r\nimport clickAgain from \"../artwork/clickAgain.JPG\"\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Painting(props) {\r\n    var [painting, setPainting] = useState(pozzi);\r\n    const [data] = ArtGetter(\"https://collectionapi.metmuseum.org/public/collection/v1/objects/\" + props.num)\r\n    \r\n\r\n    useEffect(() => {\r\n        // GET request using axios inside useEffect React hook\r\n        axios.get('https://collectionapi.metmuseum.org/public/collection/v1/objects/459110')\r\n            .then(response => setPainting(response.data));\r\n    \r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n\r\n    return (\r\n        <div className = \"artwork-display\">\r\n            {/*<div className = \"get-btn\">\r\n                <button onClick = {() => setPainting(data)}>Show Here</button>\r\n                           \r\n            </div>*/}\r\n            <div className = \"painting-data\">\r\n                {/*<p style = {{fontStyle: \"italic\"}}>{painting.title}</p>\r\n                <p>{painting.artistDisplayName}</p>\r\n                {console.log(props.num)}\r\n                {console.log(painting)}*/}\r\n                <div>\r\n                    <img className =\"art-now\" \r\n                        src = {painting.primaryImage || clickAgain} \r\n                        onClick = {() => setPainting(data) }\r\n                        class=\"thumbnail\" \r\n                        alt = \"painting\"\r\n                        title = \"Click to Change\"\r\n                    />\r\n                </div>\r\n                {/*<p>{painting.medium}</p>\r\n                <p>Made {painting.objectDate}</p>\r\n                <a href = {painting.objectURL} target = \"_blank\" rel=\"noopener noreferrer\">Open this work on the Met's website</a>*/}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Painting;","export default __webpack_public_path__ + \"static/media/loading.e94752fe.gif\";","import React, {useEffect, useState} from 'react';\r\nimport Painting from \"./Painting.js\";\r\nimport axios from 'axios';\r\nimport './Home.css'\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { GrCircleInformation } from 'react-icons/gr';\r\nimport loading from \"../artwork/loading.gif\" ;\r\n\r\nfunction Home() {\r\n    const [num, setNum] = useState([]);\r\n    var [currWork, setCurrWork] =useState()\r\n    const [yourQuery, setYourQuery] = useState(\"Auguste Renoir\")\r\n    const [isLoading, setLoading] = useState(true);\r\n    var [artChecker, setArtChecker] = useState();\r\n    var [emergArt, setEmergArt] = useState();\r\n    const [searching, setSearching] = useState(false);\r\n    const [loadingSymbol, setLoadingSymbol] = useState(false);\r\n    const [showLoadingSymbol, setShowLoadingSymbol] = useState(\"never shuffled yet\");\r\n\r\n\r\n    const randomizer = (max) => {\r\n        let numArr = [];\r\n        for (let i = 0; i < 32; i++)\r\n        {\r\n            let a = Math.floor(Math.random() * max);\r\n            numArr.push(a);\r\n        }\r\n        console.log(numArr);\r\n        return numArr; \r\n    //console.log(currWork.total + \" total images found\");\r\n    }\r\n\r\n    const handleInput = (event) => {\r\n        setYourQuery(event.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"emergency art running\");\r\n        async function fetchEmerg () {\r\n            console.log(\"fetching inside emerg, but before await\")    \r\n            let response = await axios.get('https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=Auguste%20Renoir')\r\n\r\n            console.log(\"response coming after\")\r\n            console.log(response.data)\r\n            console.log(\"setting emergency art to response from above\")\r\n            setEmergArt(response.data)\r\n            console.log(\"emergArt is:\")\r\n        }\r\n        console.log(\"fetching emerg before call\");\r\n        fetchEmerg();\r\n        console.log(\"fetching emerg after call\");\r\n        //setLoading(false);\r\n        \r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n\r\n    \r\n    function makeGetRequest(path) {\r\n        return new Promise(function (resolve, reject) {\r\n            axios.get(path).then(\r\n                (response) => {\r\n                    var result = response;\r\n                    console.log('Processing Request');\r\n                    resolve(result);\r\n                },\r\n                    (error) => {\r\n                    reject(error);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        setSearching(true);\r\n        console.log(\"searching is \" + searching)\r\n        // GET request using axios inside useEffect React hook\r\n        async function gettingData () {\r\n            //console.log(\"getting data here\");\r\n            let response = await makeGetRequest('https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=' + yourQuery)\r\n            console.log(\"yourQuery is:\")\r\n            console.log(yourQuery);\r\n            console.log(\"artChecker is (before setArtChecker(response.data)): \")\r\n            console.log(artChecker)\r\n            setArtChecker(response.data)  \r\n            console.log(\"response.data is :\")\r\n            console.log(response.data)\r\n            console.log(\"artChecker is:\")\r\n            console.log(artChecker)\r\n            console.log(\"response.data.total is: \")\r\n            console.log(response.data.total)\r\n\r\n            if (typeof artChecker === 'undefined' || response.data.total === 0)     \r\n            {\r\n                setCurrWork(emergArt);\r\n                console.log(\"emergency here, changed currWork to emergency Art\")\r\n                console.log(currWork)\r\n            }\r\n            else{\r\n                setCurrWork(response.data);                     //AM I AN IDIOT OR A BEAST\r\n            }\r\n            setLoading(false);\r\n            console.log(\"after setLoading to false\");\r\n            \r\n        }\r\n        console.log(\"getting data after\")\r\n        gettingData();\r\n        console.log(\"searching is \" + searching)\r\n        setSearching(false);\r\n        setLoadingSymbol(true);\r\n      \r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    // dependency array has some variables, this useEffect will run every time one of these variables is updated\r\n    }, [yourQuery, emergArt]);\r\n\r\n    //    useEffect(() => {\r\n    if (isLoading || typeof currWork === 'undefined') {\r\n        return <div className = \"Home\">\r\n            Loading...\r\n            {console.log(\"loading now, currWork is\")}\r\n            {console.log(currWork)}\r\n        </div>\r\n    }\r\n\r\n    function showLoadingSign() {\r\n        if (loadingSymbol === true){\r\n            setShowLoadingSymbol(\"shuffling for you\");\r\n        }\r\n        else {\r\n            setShowLoadingSymbol(\"not shuffling\");\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className= \"header\">\r\n                <h1>Mezzanine</h1>\r\n                <form className = \"search\">\r\n                    <label >\r\n                        <FaSearch/>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={yourQuery}\r\n                            onChange ={handleInput}\r\n                        />\r\n                    </label>\r\n                </form>\r\n            \r\n                <div>\r\n                    {/*<p>{showLoadingSymbol}</p>\r\n                    <img className = \"loading-icon\" src = {showLoadingSymbol} alt = {loading}/>*/}\r\n                </div>\r\n                <div className = \"results\">{currWork.total} Results</div>\r\n            \r\n                <button className = \"shuffler\" onClick = {() => setNum(randomizer(currWork.total - 1))}>Shuffle</button>\r\n            </div>\r\n            <div className = \"works-total\">\r\n                <div className = \"works-col\">\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[0]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[1]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[2]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[3]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[16]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[20]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[21]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[22]]}/>\r\n                    </div>\r\n                </div>\r\n                <div className = \"works-col\">\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[4]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[5]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[6]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[7]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[17]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[23]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[24]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[25]]}/>\r\n                    </div>\r\n                </div>    \r\n                <div className = \"works-col\">\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[8]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[9]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[10]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[11]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[18]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[26]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[27]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[28]]}/>\r\n                    </div>\r\n                </div>\r\n                <div className = \"works-col\">\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[12]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[13]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[14]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[15]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[19]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[29]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[30]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[31]]}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/*console.log(num + \" value on loading Painting.js\")*/}\r\n        </div>   \r\n    );\r\n}\r\n\r\nexport default Home;","import './App.css';\nimport Home from './Components/Home.js'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Home />\n        </div>  \n        \n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}