{"version":3,"sources":["Components/ArtGetter.js","artwork/dr.pozzi_sargent.jpg","Components/Painting.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["ArtGetter","url","useState","data","setData","useEffect","fetch","then","res","json","console","log","Painting","props","pozzi","painting","setPainting","num","axios","get","response","className","onClick","title","artistDisplayName","src","primaryImage","class","alt","objectDate","Home","setNum","currWork","setCurrWork","yourQuery","setYourQuery","isLoading","setLoading","artChecker","setArtChecker","emergArt","setEmergArt","a","fetchEmerg","gettingData","onSubmit","type","value","onChange","event","target","max","total","Math","floor","random","objectIDs","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e0f951b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n\r\nconst ArtGetter = (url) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => setData(data));\r\n    }, [url]);\r\n    if (data === null){\r\n        console.log(\"data was null for ArtGetter\");\r\n    }\r\n    return [data];\r\n};\r\n\r\nexport default ArtGetter;","export default __webpack_public_path__ + \"static/media/dr.pozzi_sargent.e9146436.jpg\";","import React, {useState, useEffect, useRef} from 'react';\r\nimport './Painting.css'\r\nimport ArtGetter from \"./ArtGetter.js\"\r\nimport pozzi from \"../artwork/dr.pozzi_sargent.jpg\"\r\nimport axios from 'axios';\r\n\r\nfunction Painting(props) {\r\n    var [painting, setPainting] = useState(pozzi);\r\n    const [data] = ArtGetter(\"https://collectionapi.metmuseum.org/public/collection/v1/objects/\" + props.num)\r\n    \r\n\r\n    useEffect(() => {\r\n        // GET request using axios inside useEffect React hook\r\n        axios.get('https://collectionapi.metmuseum.org/public/collection/v1/objects/459110')\r\n            .then(response => setPainting(response.data));\r\n    \r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n\r\n    return (\r\n        <div className = \"artwork-display\">\r\n            <div className = \"get-btn\">\r\n                <button onClick = {() => setPainting(data)}>Get</button>\r\n                           \r\n            </div>\r\n            <div className = \"painting-data\">\r\n                <p>{painting.title} by {painting.artistDisplayName}</p>\r\n                {console.log(props.num)}\r\n                {console.log(painting)}\r\n                <img className =\"art-now\" src = {painting.primaryImage} class=\"thumbnail\" alt = {pozzi}/>\r\n                <p>Made {painting.objectDate}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Painting;","import React, {useEffect, useState} from 'react';\r\nimport Painting from \"./Painting.js\";\r\nimport axios from 'axios';\r\nimport './Home.css'\r\n\r\n\r\nfunction Home() {\r\n    const [num, setNum] = useState([]);\r\n    var [currWork, setCurrWork] =useState()\r\n    const [yourQuery, setYourQuery] = useState(\"Auguste Renoir\")\r\n    const [isLoading, setLoading] = useState(true);\r\n    var [artChecker, setArtChecker] = useState();\r\n    var [emergArt, setEmergArt] = useState();\r\n\r\n    const randomizer = (max) => {\r\n        const a = Math.floor(Math.random() * max);\r\n        const b = Math.floor(Math.random() * max);\r\n        let numArr = [a,b];\r\n        return numArr; \r\n    //console.log(currWork.total + \" total images found\");\r\n    }\r\n\r\n    const handleInput = (event) => {\r\n        setYourQuery(event.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"emergency art running\");\r\n        async function fetchEmerg () {\r\n            console.log(\"fetching inside emerg, but before await\")    \r\n            let response = await axios.get('https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=Auguste%20Renoir')\r\n            //.then(response => setEmergArt(response.data))\r\n            console.log(\"response coming after\")\r\n            console.log(response.data)\r\n            console.log(\"setting emergency art to response from above\")\r\n            setEmergArt(response.data)\r\n            console.log(\"emergArt is:\")\r\n            console.log(emergArt)\r\n            //console.log(\"setting current work to emergency art\")\r\n            //setCurrWork(emergArt)\r\n            //console.log(\"fetching inside call emergArt after this\")\r\n            //console.log(isLoading)\r\n        }\r\n        console.log(\"fetching emerg before call\");\r\n        fetchEmerg();\r\n        console.log(\"fetching emerg after call\");\r\n        //setLoading(false);\r\n        \r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        // GET request using axios inside useEffect React hook\r\n        async function gettingData () {\r\n            //console.log(\"getting data here\");\r\n            let response = await axios.get('https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=' + yourQuery)\r\n            setArtChecker(response.data)       /////////////////////////problem is here, null array being passed to currWork\r\n            console.log(\"artChecker is:\")\r\n            console.log(artChecker)\r\n            if (typeof artChecker === 'undefined')\r\n            {\r\n                setCurrWork(emergArt);\r\n            }\r\n            else{\r\n                setCurrWork(artChecker);\r\n            }\r\n            /*setTimeout(function(){\r\n                console.log(\"inside timeout function, emergArt value should be after this\")\r\n                console.log(emergArt)\r\n                if (typeof artChecker === 'undefined'){\r\n                    console.log(\"UNDEFINED!! SET TO EMERGENCY ART\")\r\n                    setCurrWork(emergArt)\r\n                    console.log(\"emergency avoided\")\r\n                    console.log(emergArt)\r\n                    console.log(currWork)\r\n                    }\r\n                else{\r\n                    console.log(\"DEFINED, WE OK\")\r\n                    setCurrWork(artChecker)\r\n                    }\r\n\r\n            }, 100);           //change this value after loading site and save for site to activate properly.\r\n        */\r\n            setLoading(false);\r\n            console.log(\"after setLoading to false\");\r\n            \r\n        }\r\n        console.log(\"getting data after\")\r\n        gettingData();\r\n        \r\n      \r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, [yourQuery,num,emergArt]);\r\n\r\n    //    useEffect(() => {\r\n    if (isLoading || typeof currWork === 'undefined') {\r\n        return <div className = \"Home\">\r\n            Loading...\r\n            {console.log(\"loading now, currWork is\")}\r\n            {console.log(currWork)}\r\n        </div>\r\n    }\r\n    //    }, [currWork])\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Mezzanine</h1>\r\n            <form onSubmit={setYourQuery} >\r\n                <label>\r\n                    Your Filter:\r\n                    <input\r\n                        type=\"text\"\r\n                        value={yourQuery}\r\n                        onChange ={handleInput}\r\n                    />\r\n                </label>\r\n            </form>\r\n            <button onClick = {() => setNum(randomizer(currWork.total - 1))}>Load</button>\r\n            <div className = \"works\">\r\n                <div className = \"work-display1\">\r\n                    <Painting num = {currWork.objectIDs[num[0]]}/>          {/*currWork still is able to be passed as null, NEEDS TO BE FIXED*/}\r\n                </div>\r\n                <div className = \"work-display2\">\r\n                    <Painting num = {currWork.objectIDs[num[1]]}/>\r\n                </div>\r\n            </div>\r\n            {/*console.log(num + \" value on loading Painting.js\")*/}\r\n        </div>   \r\n    );\r\n}\r\n\r\nexport default Home;","import './App.css';\nimport Home from './Components/Home.js'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Home />\n        </div>  \n        \n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}