{"version":3,"sources":["Components/ArtGetter.js","artwork/dr.pozzi_sargent.jpg","artwork/clickAgain2.JPG","Components/Painting.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["ArtGetter","url","useState","data","setData","useEffect","fetch","then","res","json","console","log","Painting","props","pozzi","painting","setPainting","num","fullScreen","setFullScreen","axios","get","response","className","onClick","src","primaryImage","clickAgain2","class","alt","title","style","display","fontStyle","artistDisplayName","objectDate","culture","medium","color","href","objectURL","target","rel","Home","setNum","currWork","setCurrWork","yourQuery","setYourQuery","isLoading","setLoading","artChecker","setArtChecker","emergArt","setEmergArt","showInfo","setShowInfo","makeGetRequest","path","Promise","resolve","reject","result","error","a","fetchEmerg","total","gettingData","type","value","onChange","event","max","numArr","i","Math","floor","random","push","randomizer","objectIDs","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69d40cfd.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\n\r\nconst ArtGetter = (url) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n    fetch(url)\r\n      .then((res) => res.json())\r\n      .then((data) => setData(data));\r\n    }, [url]);\r\n    if (data === null){\r\n        console.log(\"data was null for ArtGetter\");\r\n    }\r\n    return [data];\r\n};\r\n\r\nexport default ArtGetter;","export default __webpack_public_path__ + \"static/media/dr.pozzi_sargent.e9146436.jpg\";","export default __webpack_public_path__ + \"static/media/clickAgain2.52660433.JPG\";","import React, {useState, useEffect, useRef} from 'react';\r\nimport './Painting.css'\r\nimport ArtGetter from \"./ArtGetter.js\"\r\nimport pozzi from \"../artwork/dr.pozzi_sargent.jpg\"\r\nimport clickAgain2 from \"../artwork/clickAgain2.JPG\"\r\nimport {FaExpandAlt} from 'react-icons/fa';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Painting(props) {\r\n    var [painting, setPainting] = useState(pozzi);\r\n    const [data] = ArtGetter(\"https://collectionapi.metmuseum.org/public/collection/v1/objects/\" + props.num)\r\n    const [fullScreen, setFullScreen] = useState(\"none\");\r\n\r\n    //Load the page initially with \"Young Girl Bathing\" to avoid null request errors\r\n\r\n    useEffect(() => {\r\n        // GET request using axios inside useEffect React hook\r\n        axios.get('https://collectionapi.metmuseum.org/public/collection/v1/objects/459110')\r\n            .then(response => setPainting(response.data));\r\n    \r\n    // empty dependency array means this effect will only run once\r\n    }, []);\r\n\r\n    return (\r\n        <div className = \"artwork-display\">\r\n            <div className = \"get-btn\">\r\n                <button className = \"expander\" onClick = {() => setFullScreen(\"block\")}><FaExpandAlt/></button>           \r\n            </div>\r\n            <div className = \"painting-data\">\r\n                <div>\r\n                    <img className =\"art-now\" \r\n                        src = {painting.primaryImage || clickAgain2} \r\n                        onClick = {() => setPainting(data) }\r\n                        class=\"thumbnail\" \r\n                        alt = \"painting\"\r\n                        title = \"Click to Change\"\r\n                    />\r\n                </div>\r\n\r\n                <div className = \"fullScreen\" style = {{display : fullScreen}}>\r\n                    <button className = \"close-img\" onClick = {() => setFullScreen(\"none\")}>X</button>\r\n                    <img className = \"fullScreenImg\"\r\n                    src = {painting.primaryImage}\r\n                    alt = \"\"\r\n                    />\r\n                    <div className = \"caption\">\r\n                        <p style = {{fontStyle : \"italic\"}}>{painting.title}</p>\r\n                        <p>{painting.artistDisplayName}</p>\r\n                        <p>Made {painting.objectDate}</p>\r\n                        <p>{painting.culture}</p>\r\n                        <p>{painting.medium}</p>\r\n                        <a style = {{color : \"blue\"}} href = {painting.objectURL} target = \"_blank\" rel=\"noopener noreferrer\">Open this work on the Met's website</a>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Painting;","import React, {useEffect, useState} from 'react';\r\nimport Painting from \"./Painting.js\";\r\nimport axios from 'axios';\r\nimport './Home.css'\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport { GrCircleInformation } from 'react-icons/gr';\r\n\r\nfunction Home() {\r\n    const [num, setNum] = useState([]);\r\n    var [currWork, setCurrWork] =useState()\r\n    const [yourQuery, setYourQuery] = useState(\"Auguste Renoir\")\r\n    const [isLoading, setLoading] = useState(true);\r\n    var [artChecker, setArtChecker] = useState();\r\n    var [emergArt, setEmergArt] = useState();\r\n    const [showInfo, setShowInfo] = useState(\"none\");\r\n\r\n\r\n    // randomizer fills an array with 32 different numbers depending on the size of max\r\n    // these numbers will represent which works of art to load onto the site\r\n\r\n    const randomizer = (max) => {\r\n        let numArr = [];\r\n        for (let i = 0; i < 32; i++)\r\n        {\r\n            let a = Math.floor(Math.random() * max);\r\n            numArr.push(a);\r\n        }\r\n        console.log(numArr);\r\n        return numArr; \r\n    }\r\n\r\n    const handleInput = (event) => {\r\n        setYourQuery(event.target.value);\r\n    }\r\n\r\n    // Upon loading the site, make a call to get the Auguste Renoir obkject so that we have some data to display\r\n\r\n    useEffect(() => {\r\n        async function fetchEmerg () {\r\n            let response = await axios.get('https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=Auguste%20Renoir')\r\n\r\n            //Auguste Renoir is our backup \"emergency\" art to show if the API request doesn't go through properly\r\n\r\n            setEmergArt(response.data)\r\n        }\r\n\r\n        fetchEmerg();\r\n        \r\n    // empty dependency array means this effect will only run once (like componentDidMount in classes)\r\n    }, []);\r\n\r\n    \r\n    function makeGetRequest(path) {\r\n        return new Promise(function (resolve, reject) {\r\n            axios.get(path).then(\r\n                (response) => {\r\n                    var result = response;\r\n                    console.log('Processing Request');\r\n                    resolve(result);\r\n                },\r\n                    (error) => {\r\n                    reject(error);\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // GET request using axios inside useEffect React hook\r\n        async function gettingData () {\r\n            let response = await makeGetRequest('https://collectionapi.metmuseum.org/public/collection/v1/search?hasImages=true&q=' + yourQuery)\r\n            setArtChecker(response.data)  \r\n\r\n            // artChecker makes sure if the API has been called yet upon loading into the site, orthat we received a response from the API\r\n            // if one of these cases is true, then we should display work from emergArt (Auguste Renoir) to avoid loading errors\r\n            if (typeof artChecker === 'undefined' || response.data.total === 0)     \r\n            {\r\n                setCurrWork(emergArt);\r\n\r\n            }\r\n\r\n            // otherwise the API has returned a new object, and we can update what the page can display to this new object\r\n\r\n            else{\r\n                setCurrWork(response.data);\r\n            }\r\n            setLoading(false);\r\n            \r\n        }\r\n        gettingData();\r\n      \r\n    // dependency array has some variables, this useEffect will run every time one of these variables is updated\r\n    }, [yourQuery, emergArt]);\r\n    \r\n\r\n    // Show loading screen if there is some delay getting the data in currWork\r\n\r\n    if (isLoading || typeof currWork === 'undefined') {\r\n        return <div className = \"Home\">\r\n            Loading...\r\n        </div>\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className= \"header\">\r\n                <h1>Mezzanine</h1>\r\n                <button className = \"info-btn\" onClick = {() => setShowInfo(\"block\")}>\r\n                    <GrCircleInformation/>\r\n                </button>\r\n                <form className = \"search\">\r\n                    <label >\r\n                        <FaSearch/>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={yourQuery}\r\n                            onChange ={handleInput}\r\n                        />\r\n                    </label>\r\n                </form>\r\n\r\n                <div className = \"results\">{currWork.total} Results</div>\r\n            \r\n                <button className = \"shuffler\" onClick = {() => setNum(randomizer(currWork.total - 1))}>Shuffle</button>\r\n            </div>\r\n\r\n            <div className = \"information\" style={{display: showInfo}}>\r\n                <button className = \"close-info\" onClick = {() => setShowInfo(\"none\")}>X</button>\r\n                <div className = \"info-text\">\r\n                    <pre>\r\n                        Hello there! Welcome to Mezzanine!\r\n                        <br></br>\r\n                        Hit <button>Shuffle</button> at the top of the screen, \r\n                        <br></br> then click on different works of art to change them.\r\n                        <br></br> Search by artist, medium, country, time period, \r\n                        <br></br> or whatever else you can think of, and see what the Met has on display,\r\n                        <br></br> or hidden away!\r\n                        <br></br> Thanks for visiting, and enjoy discovering art from the best museum in the world.\r\n                    </pre>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className = \"works-total\">\r\n                <div className = \"works-col\">\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[0]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[1]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[2]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[3]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[16]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[20]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[21]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[22]]}/>\r\n                    </div>\r\n                </div>\r\n                <div className = \"works-col\">\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[4]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[5]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[6]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[7]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[17]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[23]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[24]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[25]]}/>\r\n                    </div>\r\n                </div>    \r\n                <div className = \"works-col\">\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[8]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[9]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[10]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[11]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[18]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[26]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[27]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[28]]}/>\r\n                    </div>\r\n                </div>\r\n                <div className = \"works-col\">\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[12]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[13]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[14]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[15]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[19]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[29]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[30]]}/>\r\n                    </div>\r\n                    <div className = \"work-img\">\r\n                        <Painting num = {currWork.objectIDs[num[31]]}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>   \r\n    );\r\n}\r\n\r\nexport default Home;","import './App.css';\nimport Home from './Components/Home.js'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Home />\n        </div>  \n        \n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}